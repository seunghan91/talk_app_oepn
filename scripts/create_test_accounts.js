/**
 * 테스트 계정 생성 스크립트
 * 
 * 이 스크립트는 테스트용 계정 5개를 생성합니다.
 * 각 계정은 고유한 전화번호와 닉네임을 가지며, 테스트 목적으로 사용됩니다.
 * 
 * 사용 방법:
 * 1. 앱에서 회원가입 화면으로 이동합니다.
 * 2. 아래 제공된 전화번호와 비밀번호를 사용하여 계정을 생성합니다.
 * 3. 각 계정으로 로그인하여 메시지 전송 및 수신을 테스트합니다.
 */

/**
 * 테스트 계정 정보
 * 
 * 각 계정은 다음 정보를 포함합니다:
 * - id: 계정 식별자 (A, B, C, D, E)
 * - nickname: 계정 닉네임
 * - phone: 전화번호 (테스트용)
 * - password: 비밀번호 (모든 계정 동일)
 * - gender: 성별 (male, female, unspecified)
 */
const TEST_ACCOUNTS = [
  {
    id: 'A',
    nickname: 'A - 김철수',
    phone: '01011111111',
    password: 'test1234',
    gender: 'male'
  },
  {
    id: 'B',
    nickname: 'B - 이영희',
    phone: '01022222222',
    password: 'test1234',
    gender: 'female'
  },
  {
    id: 'C',
    nickname: 'C - 박지민',
    phone: '01033333333',
    password: 'test1234',
    gender: 'male'
  },
  {
    id: 'D',
    nickname: 'D - 최수진',
    phone: '01044444444',
    password: 'test1234',
    gender: 'female'
  },
  {
    id: 'E',
    nickname: 'E - 정민준',
    phone: '01055555555',
    password: 'test1234',
    gender: 'male'
  }
];

/**
 * 테스트 계정 사용 방법
 * 
 * 1. 앱 실행 후 로그인/회원가입 화면으로 이동
 * 2. 전화번호 인증 화면에서 위 계정 중 하나의 전화번호 입력
 * 3. 인증 코드는 개발 환경에서 자동으로 '123456'으로 설정됨
 * 4. 인증 후 회원가입 화면에서 닉네임, 성별, 비밀번호 입력
 * 5. 회원가입 완료 후 로그인하여 테스트 진행
 * 
 * 녹음 메시지 테스트 방법:
 * 1. 계정 A로 로그인하여 방송 녹음 및 전송
 * 2. 계정 B~E로 로그인하여 수신된 방송 확인
 * 3. 계정 B에서 A에게 답장 녹음 및 전송
 * 4. 계정 A로 다시 로그인하여 수신된 메시지 확인
 */

// 테스트 계정 정보 출력
console.log('=== 테스트 계정 정보 ===');
TEST_ACCOUNTS.forEach(account => {
  console.log(`
  ID: ${account.id}
  닉네임: ${account.nickname}
  전화번호: ${account.phone}
  비밀번호: ${account.password}
  성별: ${account.gender}
  `);
});

console.log(`
=== 사용 방법 ===
1. 앱 실행 후 로그인/회원가입 화면으로 이동
2. 전화번호 인증 화면에서 위 계정 중 하나의 전화번호 입력
3. 인증 코드는 개발 환경에서 자동으로 '123456'으로 설정됨
4. 인증 후 회원가입 화면에서 닉네임, 성별, 비밀번호 입력
5. 회원가입 완료 후 로그인하여 테스트 진행

=== 녹음 메시지 테스트 방법 ===
1. 계정 A로 로그인하여 방송 녹음 및 전송
2. 계정 B~E로 로그인하여 수신된 방송 확인
3. 계정 B에서 A에게 답장 녹음 및 전송
4. 계정 A로 다시 로그인하여 수신된 메시지 확인
`);

// 이 스크립트는 정보 제공용이며 실제 계정 생성은 앱에서 수행합니다. 